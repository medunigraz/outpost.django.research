# Generated by Django 2.2.28 on 2024-02-12 09:38

from django.db import migrations


class Migration(migrations.Migration):

    ops = [
        (
            """
            CREATE SCHEMA research;

            CREATE FOREIGN TABLE research.ausschreibung (
            ausschreibung_id integer NULL,
            ausschreibung_titel varchar NULL,
            kurzinfo varchar NULL,
            langinfo varchar NULL,
            einreichmodus varchar NULL,
            info_website varchar NULL,
            laufend_ja_nein varchar NULL,
            start_datum timestamp NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'AUSSCHREIBUNG');

            CREATE FOREIGN TABLE research.ausschreibung_deadline (
            deadline_id integer NULL,
            ausschreibung_id integer NULL,
            deadline timestamp NULL,
            uhrzeit varchar NULL,
            anmerkung_deadline varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'AUSSCHREIBUNG_DEADLINE');

            CREATE FOREIGN TABLE research.ausschreibung_dotierung (
            dotierung_id integer NULL,
            ausschreibung_id integer NULL,
            info_dotierung varchar NULL,
            betrag numeric NULL,
            waehrung varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'AUSSCHREIBUNG_DOTIERUNG');

            CREATE FOREIGN TABLE research.ausschreibung_geldgeber (
            ausschreibung_id integer NULL,
            geldgeber_id integer NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'AUSSCHREIBUNG_GELDGEBER');

            CREATE FOREIGN TABLE research.forschung_art (
            forschung_art_id integer NULL,
            forschung_art_de varchar NULL,
            forschung_art_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'FORSCHUNG_ART_L');

            CREATE FOREIGN TABLE research.forschung_programm (
            forschung_programm_id integer NULL,
            forschung_programm_name varchar NULL,
            aktiv_jn varchar NULL,
            geldgeber_id integer NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'FORSCHUNG_PROGRAMM_L');

            CREATE FOREIGN TABLE research.geldgeber (
            geldgeber_id integer NULL,
            geldgeber_de varchar NULL,
            geldgeber_en varchar NULL,
            strasse varchar NULL,
            ort varchar NULL,
            postleitzahl varchar NULL,
            land_id integer NULL,
            url varchar NULL,
            geldgeber_typ_id integer NULL,
            telefon varchar NULL,
            email varchar NULL,
            fo_foe_ja_nein varchar NULL,
            peer_review_assozprof varchar NULL,
            peer_review_allg varchar NULL,
            wibi_typ_id integer NULL,
            statistik_aut_typ_id integer NULL,
            landalpha2 varchar NULL,
            landalpha3 varchar NULL,
            land_de varchar NULL,
            land_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'GELDGEBER');

            CREATE FOREIGN TABLE research.geldgeber_typ (
            geldgeber_typ_id integer NULL,
            geldgeber_typ_de varchar NULL,
            geldgeber_typ_en varchar NULL,
            geldgeber_typ_kurz varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'GELDGEBER_TYP_L');

            CREATE FOREIGN TABLE research.geldgeber_typ_stataut (
            statistik_aut_typ_id integer NULL,
            bezeichnung_de varchar NULL,
            bezeichnung_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'GELDGEBER_TYP_STATAUT_L');

            CREATE FOREIGN TABLE research.geldgeber_typ_wissbil (
            wibi_typ_id integer NULL,
            bezeichnung_de varchar NULL,
            bezeichnung_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'GELDGEBER_TYP_WISSBIL_L');

            CREATE FOREIGN TABLE research.klassifikation_oestat_2012 (
            klassifikation_oestat_id integer NULL,
            klassifikation_oestat_de varchar NULL,
            klassifikation_oestat_en varchar NULL,
            ebene integer,
            parent_id integer
            )
            SERVER research
            OPTIONS (schema 'API', table 'KLASSIFIKATION_OESTAT_2012_L');

            CREATE FOREIGN TABLE research.land (
            land_id integer NULL,
            land_de varchar NULL,
            land_en varchar NULL,
            laendergruppe_id integer NULL,
            iso_alpha2 varchar NULL,
            iso_alpha3 varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'LAND_L');

            CREATE FOREIGN TABLE research.org_partner_projektfunktion (
            org_partner_projektfunktion_id integer NULL,
            org_partner_projektfunktion_de varchar NULL,
            org_partner_projektfunktion_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'ORG_PARTNER_PROJEKTFUNKTION_L');

            CREATE FOREIGN TABLE research.publikation_orgeinheit (
            publikation_id integer NULL,
            medonline_id varchar NULL,
            publikation_autorenschaft_id integer NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PUBLIKATION_ORGEINHEIT');

            CREATE FOREIGN TABLE research.partner (
            partner_id integer NULL,
            partner_landessprache varchar NULL,
            partner_en varchar NULL,
            kurzbezeichnung varchar NULL,
            strasse varchar NULL,
            postleitzahl varchar NULL,
            ort varchar NULL,
            land_id integer NULL,
            land_de varchar NULL,
            land_en varchar NULL,
            landalpha2 varchar NULL,
            landalpha3 varchar NULL,
            url varchar NULL,
            telefon varchar NULL,
            fax varchar NULL,
            wibi_typ_id integer NULL,
            email varchar NULL,
            anmerkungen varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PARTNER');

            CREATE FOREIGN TABLE research.partner_typ_wb (
            wibi_typ_id integer NULL,
            bezeichnung_de varchar NULL,
            bezeichnung_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PARTNER_TYP_WB_L');

            CREATE FOREIGN TABLE research.person_fachkenntnis (
            person_fachkenntnis_id integer NULL,
            medonline_person_id integer NULL,
            fachkenntnis_de varchar NULL,
            fachkenntnis_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PERSON_FACHKENNTNIS');

            CREATE FOREIGN TABLE research.person_kenntnis (
            person_kenntnis_id integer NULL,
            medonline_person_id integer NULL,
            kenntnis_de varchar NULL,
            kenntnis_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PERSON_KENNTNIS');

            CREATE FOREIGN TABLE research.person_klass_oestat_2012 (
            klassifikation_oestat_id integer NULL,
            medonline_person_id integer NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PERSON_KLASS_OESTAT_2012');

            CREATE FOREIGN TABLE research.publikation_person (
            publikation_id integer NULL,
            medonline_person_id integer NULL,
            publikation_autorenschaft_id integer NULL,
            letztautor_ja_nein varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PUBLIKATION_PERSON');

            CREATE FOREIGN TABLE research.person_weiterbildung (
            person_weiterbildung_id integer NULL,
            medonline_person_id integer NULL,
            person_weiterbildung_de varchar NULL,
            person_weiterbildung_en varchar NULL,
            jahr varchar NULL,
            jahr_bis varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PERSON_WEITERBILDUNG');

            CREATE FOREIGN TABLE research.projekt (
            projekt_id integer NULL,
            orgeinheit_id varchar NULL,
            projekt_typ_id integer NULL,
            kurzbezeichnung varchar NULL,
            projekttitel_de varchar NULL,
            projekttitel_en varchar NULL,
            org_partner_projektfunktion_id integer NULL,
            projektleiter_id integer NULL,
            kontaktperson_id integer NULL,
            projekt_status_id integer NULL,
            projekt_url varchar NULL,
            abstract_de varchar NULL,
            abstract_en varchar NULL,
            projektbeginn_geplant timestamp NULL,
            projektbeginn_effektiv timestamp NULL,
            projektende_geplant timestamp NULL,
            projektende_effektiv timestamp NULL,
            vergabe_art_id integer NULL,
            forschung_art_id integer NULL,
            veranstaltung_art_id integer NULL,
            studie_art_id integer NULL,
            sprache_id integer NULL,
            stammdaten_uebertragung timestamp NULL,
            forschung_programm_id integer NULL,
            forschung_subprogramm varchar NULL,
            projekttyp_neu_id integer NULL,
            projektmanagement_id varchar NULL,
            veroeffentlichung_ja_nein varchar NULL,
            sichtbar_ja_nein varchar NULL,
            projektcode_foerdergeber varchar NULL,
            ethikkommission_nr varchar NULL,
            genderforschung_ja_nein varchar NULL,
            klinische_studie_ja_nein varchar NULL,
            investigator_init_ja_nein varchar NULL,
            rechtsgrundlage_id integer NULL,
            projektsumme_beantragt numeric NULL,
            projektsumme_genehmigt numeric NULL,
            ueberwiegende_finanzierung_id integer NULL,
            pm_verantwortlicher_id integer NULL,
            innenauftrag_nr varchar NULL,
            projekt_id_m integer NULL,
            co_verantwortlicher_id integer NULL,
            zmf_nutzung_ja_nein varchar NULL,
            biobank_nutzung_ja_nein varchar NULL,
            biomed_forschung_ja_nein varchar NULL,
            nicht_kommerziell_ja_nein varchar NULL,
            eudract_nr varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PROJEKT');

            CREATE FOREIGN TABLE research.projekt_geldgeber (
            projekt_id integer NULL,
            geldgeber_id integer NULL,
            hauptgeldgeber_ja_nein varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PROJEKT_GELDGEBER');

            CREATE FOREIGN TABLE research.projekt_status (
            projekt_status_id integer NULL,
            projekt_status varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PROJEKT_STATUS_L');

            CREATE FOREIGN TABLE research.projekt_typ (
            projekt_typ_id integer NULL,
            projekt_typ_de varchar NULL,
            projekt_typ_en varchar NULL,
            projekt_typ_kurz_de varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PROJEKT_TYP_L');

            CREATE FOREIGN TABLE research.publikation (
            publikation_id integer NULL,
            autor text NULL,
            titel text NULL,
            zeitschrift text NULL,
            issn_nummer varchar NULL,
            herausgeber_sammelwerk text NULL,
            titel_sammelwerk text NULL,
            auflage varchar NULL,
            universitaet varchar NULL,
            iso_alpha3 varchar NULL,
            jahr integer NULL,
            quelle varchar NULL,
            publikation_typ_id integer NULL,
            publikation_dokumenttyp_id integer NULL,
            fallbericht_ja_nein varchar NULL,
            publikation_vortragstyp_id int4 NULL,
            doi varchar NULL,
            sci_id varchar NULL,
            pubmed_id varchar NULL,
            pmc_id varchar NULL,
            impact_faktor numeric NULL,
            impact_faktor_jahr int4 NULL,
            impact_faktor_norm_max numeric NULL,
            impact_faktor_norm_jahr int4 NULL,
            impact_faktor_norm_fach varchar NULL,
            ifnorm_supermax numeric NULL,
            ifnorm_supermax_jahr int4 NULL,
            ifnorm_supermax_fach varchar NULL,
            anzahl_zitierungen int4 NULL,
            konferenz_name varchar NULL,
            konferenz_datum varchar NULL,
            konferenz_ort varchar NULL,
            national_international varchar NULL,
            wiss_veranstaltung_ja_nein varchar NULL,
            eingeladener_vortrag_ja_nein varchar NULL,
            keynotespeaker_ja_nein varchar NULL,
            ausgew_praesentation_ja_nein varchar NULL,
            biobank_nutzung_ja_nein varchar NULL,
            tierbiologie_nutzung_ja_nein varchar NULL,
            zmf_nutzung_ja_nein varchar NULL,
            nennung_universitaet varchar NULL,
            erfassungsdatum timestamptz NULL,
            abstract text NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PUBLIKATION');

            CREATE FOREIGN TABLE research.publikation_autorenschaft (
            publikation_autorenschaft_id integer NULL,
            publikation_autorenschaft_de varchar NULL,
            publikation_autorenschaft_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PUBLIKATION_AUTORENSCHAFT_L');

            CREATE FOREIGN TABLE research.publikation_dokumenttyp (
            publikation_dokumenttyp_id integer NULL,
            publikation_dokumenttyp_de varchar NULL,
            publikation_dokumenttyp_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PUBLIKATION_DOKUMENTTYP_L');

            CREATE FOREIGN TABLE research.publikation_typ (
            publikation_typ_id integer NULL,
            publikation_typ_de varchar NULL,
            publikation_typ_en varchar NULL,
            sortierung_id integer NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'PUBLIKATION_TYP_L');

            CREATE FOREIGN TABLE research.pubmed_suche_autoren (
            suche_id integer NULL,
            pubmed_id integer NULL,
            lastname varchar NULL,
            forename varchar NULL,
            initials varchar NULL,
            affiliation varchar NULL,
            identifier_person varchar NULL,
            identifier_orge varchar NULL,
            collective_name varchar NULL
            )
            SERVER research
            OPTIONS (table 'PUBMED_SUCHE_AUTOREN');

            CREATE FOREIGN TABLE research.pubmed_suche_foerderung (
            suche_id integer NULL,
            pubmed_id integer NULL,
            grant_id varchar NULL,
            foerd_inst varchar NULL,
            foerd_land varchar NULL
            )
            SERVER research
            OPTIONS (table 'PUBMED_SUCHE_FOERDERUNGEN');

            CREATE FOREIGN TABLE research.pubmed_suche_id_detail (
            suche_id integer NULL,
            pubmed_id integer NULL,
            pubdate integer NULL,
            articletitle varchar NULL,
            doi varchar NULL,
            "language" varchar NULL,
            abstracttext varchar NULL,
            volume varchar NULL,
            issue varchar NULL,
            pagination varchar NULL,
            issn_print varchar NULL,
            issn_electronic varchar NULL,
            journaltitle varchar NULL,
            isoabbreviation varchar NULL,
            nlm_id integer NULL,
            publicationtypelist varchar NULL,
            meshheadinglist varchar NULL,
            pmc varchar NULL,
            pubmedstatus varchar NULL,
            pubdate_alternativ integer NULL,
            pubdate_received date NULL,
            pubdate_accepted date NULL,
            author_list varchar NULL,
            import_jn integer NULL
            )
            SERVER research
            OPTIONS (table 'PUBMED_SUCHE_ID_DETAIL');

            CREATE FOREIGN TABLE research.pubmed_suche_ids (
            suche_id numeric NOT NULL,
            pubmed_id numeric NULL,
            datenpaket_nr numeric NULL
            )
            SERVER research
            OPTIONS (table 'PUBMED_SUCHE_IDS');

            CREATE FOREIGN TABLE research.pubmed_suche_mesh (
            suche_id numeric NULL,
            pubmed_id numeric NULL,
            descriptor_ui varchar NULL,
            descriptor_name varchar NULL,
            majortopic_desc_jn varchar NULL,
            qualifier_ui varchar NULL,
            qualifier_name varchar NULL,
            majortopic_quali_jn varchar NULL
            )
            SERVER research
            OPTIONS (table 'PUBMED_SUCHE_MESH');

            CREATE FOREIGN TABLE research.sprache (
            sprache_id numeric NULL,
            sprache_de varchar NULL,
            sprache_en varchar NULL,
            sprache_en_kurz varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'SPRACHE_L');

            CREATE FOREIGN TABLE research.studie_art (
            studie_art_id numeric NULL,
            studie_art_de varchar NULL,
            studie_art_en varchar NULL,
            aktiv_ja_nein varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'STUDIE_ART_L');

            CREATE FOREIGN TABLE research.veranstaltung_art (
            veranstaltung_art_id numeric NULL,
            veranstaltung_art_de varchar NULL,
            veranstaltung_art_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'VERANSTALTUNG_ART_L');

            CREATE FOREIGN TABLE research.vergabe_art (
            vergabe_art_id numeric NULL,
            vergabe_art_de varchar NULL,
            vergabe_art_en varchar NULL
            )
            SERVER research
            OPTIONS (schema 'API', table 'VERGABE_ART_L');

            CREATE FOREIGN TABLE research.projekt_typ_neu (
            projekttyp_neu_id integer,
            projekttyp_neu_de text,
            projekttyp_neu_en text,
            drittmittelrichtlinie_jn text
            )
            SERVER research
            OPTIONS (schema 'API', table 'PROJEKT_TYP_NEU_L');

            CREATE FOREIGN TABLE research.forschungsfelder (
            FORSCHUNGSFELD_ID integer,
            FORSCHUNGSFELD_DE varchar,
            FORSCHUNGSFELD_EN varchar,
            AKTIV_JA_NEIN varchar
            )
            SERVER research
            OPTIONS (schema 'API', table 'FORSCHUNGSFELDER_L');

            CREATE FOREIGN TABLE research.rechtsgrundlage (
                RECHTSGRUNDLAGE_ID integer,
                RECHTSGRUNDLAGE_DE varchar,
                RECHTSGRUNDLAGE_EN varchar,
                AKTIV_JN varchar
            )
            SERVER research
            OPTIONS (schema 'API', table 'RECHTSGRUNDLAGE_L');

            CREATE FOREIGN TABLE research.ueberwiegende_finanzierung (
                UEBERWIEGENDE_FINANZIERUNG_ID integer,
                UEBERWIEGENDE_FINANZIERUNG_DE varchar,
                UEBERWIEGENDE_FINANZIERUNG_EN varchar
            )
            SERVER research
            OPTIONS (schema 'API', table 'UEBERWIEGENDE_FINANZIERUNG_L');

            CREATE FOREIGN TABLE research.funktion_in_projekt (
                FUNKTION_IN_PROJEKT_ID integer,
                FUNKTION_IN_PROJEKT_DE varchar,
                FUNKTION_IN_PROJEKT_EN varchar
            )
            SERVER research
            OPTIONS (schema 'API', table 'FUNKTION_IN_PROJEKT_L');

            CREATE MATERIALIZED VIEW public.research_projectfunction AS SELECT
                funktion_in_projekt.funktion_in_projekt_id AS id,
                HSTORE(
                    ARRAY['de', 'en'],
                    ARRAY[funktion_in_projekt.funktion_in_projekt_de::text, funktion_in_projekt.funktion_in_projekt_en::text]
                ) as name
            FROM research.funktion_in_projekt
            WITH DATA;
            CREATE UNIQUE INDEX research_projectfunction_id_idx ON public.research_projectfunction (id);

            CREATE MATERIALIZED VIEW public.research_predominant_funder AS SELECT
                ueberwiegende_finanzierung.ueberwiegende_finanzierung_id AS id,
                HSTORE(
                    ARRAY['de', 'en'],
                    ARRAY[ueberwiegende_finanzierung.ueberwiegende_finanzierung_de::text, ueberwiegende_finanzierung.ueberwiegende_finanzierung_en::text]
                ) as name
            FROM research.ueberwiegende_finanzierung
            WITH DATA;
            CREATE UNIQUE INDEX research_predominant_funder_id_idx ON public.research_predominant_funder (id);

            CREATE MATERIALIZED VIEW public.research_legal_basis AS SELECT
                rechtsgrundlage.rechtsgrundlage_id AS id,
                HSTORE(
                    ARRAY['de', 'en'],
                    ARRAY[rechtsgrundlage.rechtsgrundlage_de::text, rechtsgrundlage.rechtsgrundlage_en::text]
                ) as name,
                coalesce(lower(rechtsgrundlage.aktiv_jn) = 'j', false) AS active
            FROM research.rechtsgrundlage
            WITH DATA;
            CREATE UNIQUE INDEX research_legal_basis_id_idx ON public.research_legal_basis (id);

            CREATE MATERIALIZED VIEW public.research_research_type AS SELECT
            forschung_art.forschung_art_id AS id,
            hstore(
                ARRAY['de', 'en'],
                ARRAY[forschung_art.forschung_art_de, forschung_art.forschung_art_en]
            ) as name
            FROM research.forschung_art
            WITH DATA;
            CREATE UNIQUE INDEX research_research_type_id_idx ON public.research_research_type (id);

            CREATE MATERIALIZED VIEW public.research_field AS SELECT
                forschungsfelder.forschungsfeld_id AS id,
                hstore(
                ARRAY['de', 'en'],
                ARRAY[forschungsfelder.forschungsfeld_de, forschungsfelder.forschungsfeld_en]
                ) as name,
                coalesce(lower(aktiv_ja_nein) = 'ja', false) AS active
            FROM research.forschungsfelder
            WITH DATA;
            CREATE UNIQUE INDEX research_field_id_idx ON public.research_field USING btree (id);

            CREATE MATERIALIZED VIEW public.research_bidding
            AS SELECT
                ausschreibung.ausschreibung_id::integer AS id,
                ausschreibung.ausschreibung_titel AS title,
                ausschreibung.kurzinfo AS short,
                ausschreibung.langinfo AS description,
                ausschreibung.einreichmodus AS mode,
                ausschreibung.info_website AS url,
                coalesce(lower(ausschreibung.laufend_ja_nein::text) = 'ja'::text, false) AS running,
                ausschreibung.start_datum::timestamp with time zone AS start
            FROM research.ausschreibung
            WITH DATA;
            CREATE UNIQUE INDEX research_bidding_id_idx ON public.research_bidding USING btree (id);

            CREATE MATERIALIZED VIEW public.research_bidding_funder
            AS SELECT
                ausschreibung_geldgeber.ausschreibung_id::integer AS bidding_id,
                ausschreibung_geldgeber.geldgeber_id::integer AS funder_id
            FROM research.ausschreibung_geldgeber
            WITH DATA;
            CREATE UNIQUE INDEX research_bidding_funder_idx ON public.research_bidding_funder USING btree (bidding_id, funder_id);

            CREATE MATERIALIZED VIEW public.research_biddingdeadline
            AS SELECT
                ausschreibung_deadline.deadline_id::integer AS id,
                ausschreibung_deadline.ausschreibung_id::integer AS bidding_id,
                ausschreibung_deadline.deadline::timestamp with time zone AS deadline,
                ausschreibung_deadline.uhrzeit AS "time",
                ausschreibung_deadline.anmerkung_deadline AS comment
            FROM research.ausschreibung_deadline
            WITH DATA;
            CREATE UNIQUE INDEX research_biddingdeadline_id_idx ON public.research_biddingdeadline USING btree (id);
            CREATE INDEX research_biddingdeadline_bidding_id_idx ON public.research_biddingdeadline USING btree (bidding_id);

            CREATE MATERIALIZED VIEW public.research_biddingendowment
            AS SELECT
                ausschreibung_dotierung.dotierung_id::integer AS id,
                ausschreibung_dotierung.ausschreibung_id::integer AS bidding_id,
                ausschreibung_dotierung.info_dotierung AS information,
                ausschreibung_dotierung.betrag AS amount,
                ausschreibung_dotierung.waehrung AS currency
            FROM research.ausschreibung_dotierung
            WITH DATA;
            CREATE UNIQUE INDEX research_biddingendowment_id_idx ON public.research_biddingendowment USING btree (id);
            CREATE INDEX research_biddingendowment_bidding_id_idx ON public.research_biddingendowment USING btree (bidding_id);

            CREATE MATERIALIZED VIEW public.research_classification
            AS SELECT
                klassifikation_oestat_2012.klassifikation_oestat_id AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[klassifikation_oestat_2012.klassifikation_oestat_de, klassifikation_oestat_2012.klassifikation_oestat_en]
                ) AS name,
                ebene AS level,
                parent_id
            FROM research.klassifikation_oestat_2012
            WITH DATA;
            CREATE UNIQUE INDEX research_classification_id_idx ON public.research_classification USING btree (id);
            CREATE INDEX research_classification_parent_id_idx ON public.research_classification (parent_id);

            CREATE MATERIALIZED VIEW public.research_classification_person
            AS SELECT
                person_klass_oestat_2012.klassifikation_oestat_id::integer AS classification_id,
                person_klass_oestat_2012.medonline_person_id::integer AS person_id
            FROM research.person_klass_oestat_2012
            WITH DATA;
            CREATE UNIQUE INDEX research_classification_person_idx ON public.research_classification_person USING btree (classification_id, person_id);

            CREATE MATERIALIZED VIEW public.research_education
            AS SELECT
                person_weiterbildung.person_weiterbildung_id::integer AS id,
                person_weiterbildung.medonline_person_id::integer AS person_id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[person_weiterbildung.person_weiterbildung_de::text, person_weiterbildung.person_weiterbildung_en::text]
                ) AS name,
                person_weiterbildung.jahr AS "from",
                person_weiterbildung.jahr_bis AS "to"
            FROM research.person_weiterbildung
            WITH DATA;
            CREATE UNIQUE INDEX research_education_id_idx ON public.research_education USING btree (id);
            CREATE INDEX research_education_person_id_idx ON public.research_education USING btree (person_id);

            CREATE MATERIALIZED VIEW public.research_expertise
            AS SELECT
                person_fachkenntnis.person_fachkenntnis_id::integer AS id,
                person_fachkenntnis.medonline_person_id::integer AS person_id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[person_fachkenntnis.fachkenntnis_de::text, person_fachkenntnis.fachkenntnis_en::text]
                ) AS name
            FROM research.person_fachkenntnis
            WITH DATA;
            CREATE UNIQUE INDEX research_expertise_id_idx ON public.research_expertise USING btree (id);
            CREATE INDEX research_expertise_person_id_idx ON public.research_expertise USING btree (person_id);

            CREATE MATERIALIZED VIEW public.research_funder
            AS SELECT
                geldgeber.geldgeber_id::integer AS id,
                geldgeber.geldgeber_de AS name,
                geldgeber.strasse AS street,
                geldgeber.ort AS city,
                geldgeber.postleitzahl AS zipcode,
                laender_iso.iso_nummer::integer AS country_id,
                geldgeber.url,
                geldgeber.geldgeber_typ_id::integer AS category_id,
                geldgeber.telefon AS telephone,
                geldgeber.email,
                coalesce(lower(geldgeber.fo_foe_ja_nein::text) = 'ja'::text, false) AS patron,
                coalesce(lower(geldgeber.peer_review_assozprof::text) = 'ja'::text, false) AS patron_associate_professor,
                coalesce(lower(geldgeber.peer_review_allg::text) = 'ja'::text, false) AS patron_peer_review,
                geldgeber.wibi_typ_id::integer AS typeintellectualcapitalaccounting_id,
                geldgeber.statistik_aut_typ_id::integer AS typestatisticsaustria_id
            FROM research.geldgeber
            LEFT JOIN research.land on (geldgeber.land_id = land.land_id)
            LEFT JOIN campusonline.laender_iso on (land.iso_alpha3 = laender_iso.iso_code_3)
            WITH DATA;
            CREATE UNIQUE INDEX research_funder_id_idx ON public.research_funder USING btree (id);
            CREATE INDEX research_funder_country_id_idx ON public.research_funder USING btree (country_id);
            CREATE INDEX research_funder_category_id_idx ON public.research_funder USING btree (category_id);
            CREATE INDEX research_funder_patron_idx ON public.research_funder USING btree (patron);
            CREATE INDEX research_funder_patron_associate_professor_idx ON public.research_funder USING btree (patron_associate_professor);
            CREATE INDEX research_funder_patron_peer_review_idx ON public.research_funder USING btree (patron_peer_review);

            CREATE MATERIALIZED VIEW public.research_fundercategory
            AS SELECT
                geldgeber_typ.geldgeber_typ_id::integer AS id,
                geldgeber_typ.geldgeber_typ_de AS name,
                geldgeber_typ.geldgeber_typ_kurz AS short
            FROM research.geldgeber_typ
            WITH DATA;
            CREATE UNIQUE INDEX research_fundercategory_id_idx ON public.research_fundercategory USING btree (id);

            CREATE MATERIALIZED VIEW public.research_fundertypeintellectualcapitalaccounting
            AS SELECT
                geldgeber_typ_wissbil.wibi_typ_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[geldgeber_typ_wissbil.bezeichnung_de, geldgeber_typ_wissbil.bezeichnung_en]
                ) AS name
            FROM research.geldgeber_typ_wissbil
            WITH DATA;
            CREATE UNIQUE INDEX research_fundertypeintellectualcapitalaccounting_id_idx ON public.research_fundertypeintellectualcapitalaccounting USING btree (id);

            CREATE MATERIALIZED VIEW public.research_fundertypestatisticsaustria
            AS SELECT
                geldgeber_typ_stataut.statistik_aut_typ_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[geldgeber_typ_stataut.bezeichnung_de, geldgeber_typ_stataut.bezeichnung_en]
                ) AS name
            FROM research.geldgeber_typ_stataut
            WITH DATA;
            CREATE UNIQUE INDEX research_fundertypestatisticsaustria_id_idx ON public.research_fundertypestatisticsaustria USING btree (id);

            CREATE MATERIALIZED VIEW public.research_knowledge
            AS SELECT
                person_kenntnis.person_kenntnis_id::integer AS id,
                person_kenntnis.medonline_person_id::integer AS person_id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[person_kenntnis.kenntnis_de::text, person_kenntnis.kenntnis_en::text]
                ) AS name
            FROM research.person_kenntnis
            WITH DATA;
            CREATE UNIQUE INDEX research_knowledge_id_idx ON public.research_knowledge USING btree (id);

            CREATE MATERIALIZED VIEW public.research_language
            AS SELECT
                sprache.sprache_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[sprache.sprache_de::text, sprache.sprache_en::text]
                ) AS name,
                sprache.sprache_en_kurz AS iso
            FROM research.sprache
            WITH DATA;
            CREATE UNIQUE INDEX research_language_id_idx ON public.research_language USING btree (id);
            CREATE INDEX research_language_iso_idx ON public.research_language USING btree (iso);

            CREATE MATERIALIZED VIEW public.research_partner
            AS SELECT
                partner.partner_id::integer AS id,
                partner.partner_landessprache AS name,
                partner.kurzbezeichnung AS short,
                partner.strasse AS street,
                partner.postleitzahl AS zipcode,
                partner.ort AS city,
                laender_iso.iso_nummer AS country_id,
                partner.url,
                partner.telefon AS telephone,
                partner.fax,
                partner.wibi_typ_id::integer AS typeintellectualcapitalaccounting_id,
                partner.email,
                partner.anmerkungen AS information
            FROM research.partner
            LEFT JOIN research.land on (partner.land_id = land.land_id)
            LEFT JOIN campusonline.laender_iso on (land.iso_alpha3 = laender_iso.iso_code_3)
            WITH DATA;
            CREATE UNIQUE INDEX research_partner_id_idx ON public.research_partner USING btree (id);
            CREATE INDEX research_partner_country_id_idx ON public.research_partner USING btree (country_id);
            CREATE INDEX research_partner_typeintellectualcapitalaccounting_id_idx ON public.research_partner USING btree (typeintellectualcapitalaccounting_id);

            CREATE MATERIALIZED VIEW public.research_partnertypeintellectualcapitalaccounting
            AS SELECT
                partner_typ_wb.wibi_typ_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[partner_typ_wb.bezeichnung_de, partner_typ_wb.bezeichnung_en]::text[]
                ) AS name
            FROM research.partner_typ_wb
            WITH DATA;
            CREATE UNIQUE INDEX research_partnertypeintellectualcapitalaccounting_id_idx ON public.research_partnertypeintellectualcapitalaccounting USING btree (id);

            CREATE MATERIALIZED VIEW public.research_program
            AS SELECT
                forschung_programm.forschung_programm_id::integer AS id,
                forschung_programm.forschung_programm_name AS name,
                COALESCE(lower(forschung_programm.aktiv_jn::text) = 'n'::text, false) AS active,
                forschung_programm.geldgeber_id::integer AS funder_id
            FROM research.forschung_programm
            WITH DATA;
            CREATE UNIQUE INDEX research_program_id_idx ON public.research_program USING btree (id);
            CREATE INDEX research_program_funder_id_idx ON public.research_program USING btree (funder_id);

            CREATE MATERIALIZED VIEW public.research_project
            AS SELECT
                projekt.projekt_id::integer AS id,
                projekt.orgeinheit_id::integer AS organization_id,
                projekt.projekt_typ_id::integer AS type_id,
                projekt.kurzbezeichnung AS short,
                hstore(ARRAY['de'::text, 'en'::text], ARRAY[replace(projekt.projekttitel_de::text, ' '::text, ' '::text), replace(projekt.projekttitel_en::text, ' '::text, ' '::text)]) AS title,
                projekt.org_partner_projektfunktion_id::integer AS partner_function_id,
                co_p_m.pers_nr::integer AS manager_id,
                co_p_c.pers_nr::integer AS contact_id,
                projekt.projekt_status_id::integer AS status_id,
                projekt.projekt_url AS url,
                hstore(ARRAY['de'::text, 'en'::text], ARRAY[replace(projekt.abstract_de::text, ' '::text, ' '::text), replace(projekt.abstract_en::text, ' '::text, ' '::text)]) AS abstract,
                projekt.projektbeginn_geplant::timestamp with time zone AS begin_planned,
                projekt.projektbeginn_effektiv::timestamp with time zone AS begin_effective,
                projekt.projektende_geplant::timestamp with time zone AS end_planned,
                projekt.projektende_effektiv::timestamp with time zone AS end_effective,
                projekt.vergabe_art_id::integer AS grant_id,
                projekt.forschung_art_id::integer AS research_id,
                projekt.veranstaltung_art_id::integer AS event_id,
                projekt.studie_art_id::integer AS study_id,
                projekt.sprache_id::integer AS language_id,
                projekt.stammdaten_uebertragung::timestamp with time zone AS assignment,
                projekt.forschung_programm_id AS program_id,
                projekt.forschung_subprogramm AS subprogram,
                projekt.projekttyp_neu_id AS category_id,
                COALESCE(LOWER(projekt.veroeffentlichung_ja_nein) = 'ja'::text, false) AS publish,
                COALESCE(LOWER(projekt.sichtbar_ja_nein) = 'ja'::text, false) AS visible,
                projektcode_foerdergeber AS funder_projectcode,
                ethikkommission_nr AS ethics_committee,
                COALESCE(LOWER(genderforschung_ja_nein) = 'ja'::text, false) AS gender_studies,
                COALESCE(LOWER(klinische_studie_ja_nein) = 'ja'::text, false) AS clinical_trial,
                COALESCE(LOWER(investigator_init_ja_nein) = 'ja'::text, false) AS invesitgator_init,
                rechtsgrundlage_id AS legalbasis_id,
                projektsumme_beantragt AS project_total_requested,
                projektsumme_genehmigt AS project_total_approved,
                ueberwiegende_finanzierung_id AS predominant_funder_id,
                co_p_pma.pers_nr::integer AS project_management_accountable_id,
                innenauftrag_nr AS internal_order,
                projekt_id_m AS parent_id,
                co_p_ca.pers_nr::integer AS co_accountable_id,
                COALESCE(LOWER(zmf_nutzung_ja_nein) = 'ja'::text, false) AS zmf_usage,
                COALESCE(LOWER(biobank_nutzung_ja_nein) = 'ja'::text, false) AS biobank_usage,
                COALESCE(LOWER(biomed_forschung_ja_nein) = 'ja'::text, false) AS biomed_research,
                COALESCE(LOWER(nicht_kommerziell_ja_nein) = 'ja'::text, false) AS commercial,
                eudract_nr AS edudract_number
            FROM research.projekt
                LEFT JOIN campusonline.personen co_p_m ON projekt.projektleiter_id::integer = co_p_m.pers_nr::integer
                LEFT JOIN campusonline.personen co_p_c ON projekt.kontaktperson_id::integer = co_p_c.pers_nr::integer
                LEFT JOIN campusonline.personen co_p_pma ON projekt.pm_verantwortlicher_id::integer = co_p_pma.pers_nr::integer
                LEFT JOIN campusonline.personen co_p_ca ON projekt.co_verantwortlicher_id::integer = co_p_ca.pers_nr::integer
                JOIN campusonline.organisationen co_o ON projekt.orgeinheit_id::integer = co_o.nr::integer
            WITH DATA;
            CREATE UNIQUE INDEX research_project_id_idx ON public.research_project USING btree (id);
            CREATE INDEX research_project_organization_id_idx ON public.research_project USING btree (organization_id);
            CREATE INDEX research_project_type_id_idx ON public.research_project USING btree (type_id);
            CREATE INDEX research_project_category_id_idx ON public.research_project USING btree (category_id);
            CREATE INDEX research_project_partner_function_id_idx ON public.research_project USING btree (partner_function_id);
            CREATE INDEX research_project_manager_id_idx ON public.research_project USING btree (manager_id);
            CREATE INDEX research_project_contact_id_idx ON public.research_project USING btree (contact_id);
            CREATE INDEX research_project_status_id_idx ON public.research_project USING btree (status_id);
            CREATE INDEX research_project_grant_id_idx ON public.research_project USING btree (grant_id);
            CREATE INDEX research_project_research_id_idx ON public.research_project USING btree (research_id);
            CREATE INDEX research_project_event_id_idx ON public.research_project USING btree (event_id);
            CREATE INDEX research_project_study_id_idx ON public.research_project USING btree (study_id);
            CREATE INDEX research_project_language_id_idx ON public.research_project USING btree (language_id);
            CREATE INDEX research_project_program_id_idx ON public.research_project USING btree (program_id);

            CREATE MATERIALIZED VIEW public.research_project_funder
            AS SELECT
                projekt_geldgeber.projekt_id::integer AS project_id,
                projekt_geldgeber.geldgeber_id::integer AS funder_id,
                coalesce(lower(projekt_geldgeber.hauptgeldgeber_ja_nein::text) = 'ja'::text, false) AS "primary"
            FROM research.projekt_geldgeber
            WITH DATA;
            CREATE UNIQUE INDEX research_project_funder_idx ON public.research_project_funder USING btree (project_id, funder_id);
            CREATE INDEX research_project_funder_funder_id_idx ON public.research_project_funder USING btree (funder_id);
            CREATE INDEX research_project_funder_project_id_idx ON public.research_project_funder USING btree (project_id);

            CREATE MATERIALIZED VIEW public.research_projectcategory
            AS SELECT
                ptn.projekttyp_neu_id AS id,
                hstore(
                    ARRAY['de', 'en'],
                    ARRAY[ptn.projekttyp_neu_de, ptn.projekttyp_neu_en]
                ) AS name,
                coalesce(ptn.drittmittelrichtlinie_jn = 'j', false) AS third_party_funding_policy
            FROM research.projekt_typ_neu ptn
            WITH DATA;
            CREATE UNIQUE INDEX research_projectcategory_id_idx ON public.research_projectcategory USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projecttype
            AS SELECT
                t.projekt_typ_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[t.projekt_typ_de::text, t.projekt_typ_en::text]
                ) AS name,
                t.projekt_typ_kurz_de AS short,
                COALESCE(d.public, false) AS public
            FROM research.projekt_typ t
            LEFT JOIN public.research_djangoprojecttype d ON t.projekt_typ_id::integer = d.id
            WITH DATA;
            CREATE UNIQUE INDEX research_projecttype_id_idx ON public.research_projecttype USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projectevent
            AS SELECT
                veranstaltung_art.veranstaltung_art_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[veranstaltung_art.veranstaltung_art_de::text, veranstaltung_art.veranstaltung_art_en::text]
                ) AS name
            FROM research.veranstaltung_art
            WITH DATA;
            CREATE UNIQUE INDEX research_projectevent_id_idx ON public.research_projectevent USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projectgrant
            AS SELECT
                vergabe_art.vergabe_art_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[vergabe_art.vergabe_art_de::text, vergabe_art.vergabe_art_en::text]
                ) AS name
            FROM research.vergabe_art
            WITH DATA;
            CREATE UNIQUE INDEX research_projectgrant_id_idx ON public.research_projectgrant USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projectpartnerfunction
            AS SELECT
                org_partner_projektfunktion.org_partner_projektfunktion_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[org_partner_projektfunktion.org_partner_projektfunktion_de::text, org_partner_projektfunktion.org_partner_projektfunktion_en::text]
                ) AS name
            FROM research.org_partner_projektfunktion
            WITH DATA;
            CREATE UNIQUE INDEX research_projectpartnerfunction_id_idx ON public.research_projectpartnerfunction USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projectresearch
            AS SELECT
                forschung_art.forschung_art_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[forschung_art.forschung_art_de::text, forschung_art.forschung_art_de::text]
                ) AS name
            FROM research.forschung_art
            WITH DATA;
            CREATE UNIQUE INDEX research_projectresearch_id_idx ON public.research_projectresearch USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projectstatus
            AS SELECT
                s.projekt_status_id::integer AS id,
                s.projekt_status AS name,
                coalesce(d.public, false) AS public
            FROM research.projekt_status s
            LEFT JOIN research_djangoprojectstatus d ON s.projekt_status_id::integer = d.id
            WITH DATA;
            CREATE UNIQUE INDEX research_projectstatus_id_idx ON public.research_projectstatus USING btree (id);

            CREATE MATERIALIZED VIEW public.research_projectstudy
            AS SELECT
                studie_art.studie_art_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[studie_art.studie_art_de::text, studie_art.studie_art_en::text]
                ) AS name,
                coalesce(lower(studie_art.aktiv_ja_nein) = 'ja', false) AS active
            FROM research.studie_art
            WITH DATA;
            CREATE UNIQUE INDEX research_projectstudy_id_idx ON public.research_projectstudy USING btree (id);

            CREATE MATERIALIZED VIEW public.research_publication
            AS SELECT DISTINCT
                p.publikation_id::integer AS id,
                p.titel AS title,
                regexp_split_to_array(btrim(p.autor::text, ' '::text), ';\s*'::text) AS authors,
                p.jahr::integer AS year,
                p.quelle AS source,
                p.publikation_typ_id::integer AS category_id,
                p.publikation_dokumenttyp_id::integer AS document_type_id,
                p.sci_id AS sci,
                p.pubmed_id AS pubmed,
                p.doi,
                p.pmc_id AS pmc,
                p.abstract,
                p.erfassungsdatum AS imported,
                p.zeitschrift AS journal,
                p.issn_nummer AS issn,
                p.herausgeber_sammelwerk AS collection_publisher,
                p.titel_sammelwerk AS collection_title,
                p.auflage AS edition,
                p.universitaet AS university,
                li.iso_nummer AS country_id,
                coalesce(lower(p.fallbericht_ja_nein::text) = 'ja'::text, false) AS case_report,
                p.impact_faktor AS impactfactor,
                p.impact_faktor_jahr AS impactfactor_year,
                p.impact_faktor_norm_max AS impactfactor_norm,
                p.impact_faktor_norm_jahr AS impactfactor_norm_year,
                p.impact_faktor_norm_fach AS impactfactor_norm_category,
                p.ifnorm_supermax AS impactfactor_norm_super,
                p.ifnorm_supermax_jahr AS impactfactor_norm_super_year,
                p.ifnorm_supermax_fach AS impactfactor_norm_super_category,
                p.anzahl_zitierungen AS citations,
                p.konferenz_name AS conference_name,
                p.konferenz_ort AS conference_place,
                coalesce(lower(p.national_international::text) = 'international'::text, false) AS conference_international,
                coalesce(lower(p.wiss_veranstaltung_ja_nein::text) = 'ja'::text, false) AS scientific_event,
                coalesce(lower(p.eingeladener_vortrag_ja_nein::text) = 'ja'::text, false) AS invited_lecture,
                coalesce(lower(p.keynotespeaker_ja_nein::text) = 'ja'::text, false) AS keynote_speaker,
                coalesce(lower(p.ausgew_praesentation_ja_nein::text) = 'ja'::text, false) AS selected_presentation,
                coalesce(lower(p.biobank_nutzung_ja_nein::text) = 'ja'::text, false) AS biobank_use,
                coalesce(lower(p.tierbiologie_nutzung_ja_nein::text) = 'ja'::text, false) AS bmf_use,
                coalesce(lower(p.zmf_nutzung_ja_nein::text) = 'ja'::text, false) AS zmf_use,
                coalesce(lower(p.nennung_universitaet::text) = 'ja'::text, false) AS local_affiliation
            FROM research.publikation p
            LEFT JOIN campusonline.laender_iso li ON lower(p.iso_alpha3::text) = lower(li.iso_code_3::text)
            WITH DATA;

            CREATE UNIQUE INDEX research_publication_id_idx ON public.research_publication USING btree (id);
            CREATE INDEX research_publication_category_id_idx ON public.research_publication USING btree (category_id);
            CREATE INDEX research_publication_document_type_id_idx ON public.research_publication USING btree (document_type_id);
            CREATE INDEX research_publication_impactfactor_idx ON public.research_publication USING btree (impactfactor);
            CREATE INDEX research_publication_impactfactor_norm_idx ON public.research_publication USING btree (impactfactor_norm);
            CREATE INDEX research_publication_impactfactor_norm_super_idx ON public.research_publication USING btree (impactfactor_norm_super);
            CREATE INDEX research_publication_year_idx ON public.research_publication USING btree (year);

            CREATE MATERIALIZED VIEW public.research_publication_person
            AS SELECT DISTINCT
                publikation_person.publikation_id::integer AS publication_id,
                publikation_person.medonline_person_id::integer AS person_id,
                publikation_person.PUBLIKATION_AUTORENSCHAFT_ID AS publicationauthorship_id,
                coalesce(lower(publikation_person.letztautor_ja_nein::text) = 'ja'::text, false) AS last_author
            FROM research.publikation_person
            JOIN research.publikation r_p ON publikation_person.publikation_id::integer = r_p.publikation_id::integer
            JOIN campusonline.personen co_p ON publikation_person.medonline_person_id::integer = co_p.pers_nr::integer
            WITH DATA;
            CREATE UNIQUE INDEX research_publication_person_idx ON public.research_publication_person USING btree (publication_id, person_id);
            CREATE INDEX research_publication_person_person_id_idx ON public.research_publication_person USING btree (person_id);
            CREATE INDEX research_publication_person_publication_id_idx ON public.research_publication_person USING btree (publication_id);

            CREATE MATERIALIZED VIEW public.research_publicationauthorship
            AS SELECT
                publikation_autorenschaft.publikation_autorenschaft_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[publikation_autorenschaft.publikation_autorenschaft_de::text, publikation_autorenschaft.publikation_autorenschaft_en::text]
                ) AS name
            FROM research.publikation_autorenschaft
            WITH DATA;
            CREATE UNIQUE INDEX research_publicationauthorship_id_idx ON public.research_publicationauthorship USING btree (id);

            CREATE MATERIALIZED VIEW public.research_publicationcategory
            AS SELECT
                publikation_typ.publikation_typ_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[publikation_typ.publikation_typ_de::text, publikation_typ.publikation_typ_en::text]
                ) AS name
            FROM research.publikation_typ
            WITH DATA;
            CREATE UNIQUE INDEX research_publicationcategory_id_idx ON public.research_publicationcategory USING btree (id);

            CREATE MATERIALIZED VIEW public.research_publicationdocument
            AS SELECT
                publikation_dokumenttyp.publikation_dokumenttyp_id::integer AS id,
                hstore(
                ARRAY['de'::text, 'en'::text],
                ARRAY[publikation_dokumenttyp.publikation_dokumenttyp_de::text, publikation_dokumenttyp.publikation_dokumenttyp_en::text]
                ) AS name
            FROM research.publikation_dokumenttyp
            WITH DATA;
            CREATE UNIQUE INDEX research_publicationdocument_id_idx ON public.research_publicationdocument USING btree (id);

            CREATE MATERIALIZED VIEW public.research_publicationorganization
            AS SELECT DISTINCT
                format('%s-%s'::text, r_po.publikation_id::integer, r_po.medonline_id::integer) AS id,
                r_po.publikation_id::integer AS publication_id,
                r_po.medonline_id::integer AS organization_id,
                r_po.publikation_autorenschaft_id::integer AS authorship_id
            FROM research.publikation_orgeinheit r_po
            JOIN research.publikation r_p ON r_po.publikation_id::integer = r_p.publikation_id::integer
            JOIN campusonline.organisationen co_o ON r_po.medonline_id::integer = co_o.nr::integer
            WITH DATA;
            CREATE UNIQUE INDEX research_publicationorganization_idx ON public.research_publicationorganization USING btree (publication_id, organization_id);
            CREATE INDEX research_publicationorganization_organization_id_idx ON public.research_publicationorganization USING btree (organization_id);
            CREATE INDEX research_publicationorganization_publication_id_idx ON public.research_publicationorganization USING btree (publication_id);
            """,
            """
            DROP INDEX IF EXISTS research_predominant_funder_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_predominant_funder;

            DROP INDEX IF EXISTS research_legal_basis_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_legal_basis;

            DROP INDEX IF EXISTS research_research_type_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_research_type;

            DROP INDEX IF EXISTS research_field_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_field;

            DROP INDEX IF EXISTS research_bidding_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_bidding;

            DROP INDEX IF EXISTS research_bidding_funder_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_bidding_funder;

            DROP INDEX IF EXISTS research_biddingdeadline_id_idx;
            DROP INDEX IF EXISTS research_biddingdeadline_bidding_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_biddingdeadline;

            DROP INDEX IF EXISTS research_biddingendowment_id_idx;
            DROP INDEX IF EXISTS research_biddingendowment_bidding_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_biddingendowment;

            DROP INDEX IF EXISTS research_classification_id_idx;
            DROP INDEX IF EXISTS research_classification_parent_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_classification;

            DROP INDEX IF EXISTS research_classification_person_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_classification_person;

            DROP INDEX IF EXISTS research_education_id_idx;
            DROP INDEX IF EXISTS research_education_person_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_education;

            DROP INDEX IF EXISTS research_expertise_id_idx;
            DROP INDEX IF EXISTS research_expertise_person_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_expertise;

            DROP INDEX IF EXISTS research_funder_id_idx;
            DROP INDEX IF EXISTS research_funder_country_id_idx;
            DROP INDEX IF EXISTS research_funder_category_id_idx;
            DROP INDEX IF EXISTS research_funder_patron_idx;
            DROP INDEX IF EXISTS research_funder_patron_associate_professor_idx;
            DROP INDEX IF EXISTS research_funder_patron_peer_review_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_funder;

            DROP INDEX IF EXISTS research_fundercategory_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_fundercategory;

            DROP INDEX IF EXISTS research_fundertypeintellectualcapitalaccounting_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_fundertypeintellectualcapitalaccounting;

            DROP INDEX IF EXISTS research_fundertypestatisticsaustria_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_fundertypestatisticsaustria;

            DROP INDEX IF EXISTS research_knowledge_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_knowledge;

            DROP INDEX IF EXISTS research_language_id_idx;
            DROP INDEX IF EXISTS research_language_iso_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_language;

            DROP INDEX IF EXISTS research_partner_id_idx;
            DROP INDEX IF EXISTS research_partner_country_id_idx;
            DROP INDEX IF EXISTS research_partner_typeintellectualcapitalaccounting_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_partner;

            DROP INDEX IF EXISTS research_partnertypeintellectualcapitalaccounting_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_partnertypeintellectualcapitalaccounting;

            DROP INDEX IF EXISTS research_program_id_idx;
            DROP INDEX IF EXISTS research_program_funder_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_program;

            DROP INDEX IF EXISTS research_project_id_idx;
            DROP INDEX IF EXISTS research_project_organization_id_idx;
            DROP INDEX IF EXISTS research_project_category_id_idx;
            DROP INDEX IF EXISTS research_project_partner_function_id_idx;
            DROP INDEX IF EXISTS research_project_manager_id_idx;
            DROP INDEX IF EXISTS research_project_contact_id_idx;
            DROP INDEX IF EXISTS research_project_status_id_idx;
            DROP INDEX IF EXISTS research_project_grant_id_idx;
            DROP INDEX IF EXISTS research_project_research_id_idx;
            DROP INDEX IF EXISTS research_project_event_id_idx;
            DROP INDEX IF EXISTS research_project_study_id_idx;
            DROP INDEX IF EXISTS research_project_language_id_idx;
            DROP INDEX IF EXISTS research_project_program_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_project;

            DROP INDEX IF EXISTS research_project_funder_idx;
            DROP INDEX IF EXISTS research_project_funder_funder_id_idx;
            DROP INDEX IF EXISTS research_project_funder_project_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_project_funder;

            DROP INDEX IF EXISTS research_projectcategory_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectcategory;

            DROP INDEX IF EXISTS research_projecttype_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projecttype;

            DROP INDEX IF EXISTS research_projectevent_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectevent;

            DROP INDEX IF EXISTS research_projectgrant_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectgrant;

            DROP INDEX IF EXISTS research_projectpartnerfunction_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectpartnerfunction;

            DROP INDEX IF EXISTS research_projectresearch_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectresearch;

            DROP INDEX IF EXISTS research_projectstatus_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectstatus;

            DROP INDEX IF EXISTS research_projectstudy_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectstudy;

            DROP INDEX IF EXISTS research_publication_id_idx;
            DROP INDEX IF EXISTS research_publication_category_id_idx;
            DROP INDEX IF EXISTS research_publication_document_type_id_idx;
            DROP INDEX IF EXISTS research_publication_impactfactor_idx;
            DROP INDEX IF EXISTS research_publication_impactfactor_norm_idx;
            DROP INDEX IF EXISTS research_publication_impactfactor_norm_super_idx;
            DROP INDEX IF EXISTS research_publication_year_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_publication;

            DROP INDEX IF EXISTS research_publication_person_idx;
            DROP INDEX IF EXISTS research_publication_person_person_id_idx;
            DROP INDEX IF EXISTS research_publication_person_publication_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_publication_person;

            DROP INDEX IF EXISTS research_publicationauthorship_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_publicationauthorship;

            DROP INDEX IF EXISTS research_publicationcategory_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_publicationcategory;

            DROP INDEX IF EXISTS research_publicationdocument_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_publicationdocument;

            DROP INDEX IF EXISTS research_publicationorganization_idx;
            DROP INDEX IF EXISTS research_publicationorganization_organization_id_idx;
            DROP INDEX IF EXISTS research_publicationorganization_publication_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_publicationorganization;

            DROP INDEX IF EXISTS research_projectfunction_id_idx;
            DROP MATERIALIZED VIEW IF EXISTS public.research_projectfunction;

            DROP FOREIGN TABLE IF EXISTS research.ausschreibung;

            DROP FOREIGN TABLE IF EXISTS research.ausschreibung_deadline;

            DROP FOREIGN TABLE IF EXISTS research.ausschreibung_dotierung;

            DROP FOREIGN TABLE IF EXISTS research.ausschreibung_geldgeber;

            DROP FOREIGN TABLE IF EXISTS research.forschung_art;

            DROP FOREIGN TABLE IF EXISTS research.forschung_programm;

            DROP FOREIGN TABLE IF EXISTS research.geldgeber;

            DROP FOREIGN TABLE IF EXISTS research.geldgeber_typ;

            DROP FOREIGN TABLE IF EXISTS research.geldgeber_typ_stataut;

            DROP FOREIGN TABLE IF EXISTS research.geldgeber_typ_wissbil;

            DROP FOREIGN TABLE IF EXISTS research.klassifikation_oestat_2012;

            DROP FOREIGN TABLE IF EXISTS research.land;

            DROP FOREIGN TABLE IF EXISTS research.org_partner_projektfunktion;

            DROP FOREIGN TABLE IF EXISTS research.publikation_orgeinheit;

            DROP FOREIGN TABLE IF EXISTS research.partner;

            DROP FOREIGN TABLE IF EXISTS research.partner_typ_wb;

            DROP FOREIGN TABLE IF EXISTS research.person_fachkenntnis;

            DROP FOREIGN TABLE IF EXISTS research.person_kenntnis;

            DROP FOREIGN TABLE IF EXISTS research.person_klass_oestat_2012;

            DROP FOREIGN TABLE IF EXISTS research.publikation_person;

            DROP FOREIGN TABLE IF EXISTS research.person_weiterbildung;

            DROP FOREIGN TABLE IF EXISTS research.projekt;

            DROP FOREIGN TABLE IF EXISTS research.projekt_geldgeber;

            DROP FOREIGN TABLE IF EXISTS research.projekt_status;

            DROP FOREIGN TABLE IF EXISTS research.projekt_typ;

            DROP FOREIGN TABLE IF EXISTS research.publikation;

            DROP FOREIGN TABLE IF EXISTS research.publikation_autorenschaft;

            DROP FOREIGN TABLE IF EXISTS research.publikation_dokumenttyp;

            DROP FOREIGN TABLE IF EXISTS research.publikation_typ;

            DROP FOREIGN TABLE IF EXISTS research.pubmed_suche_autoren;

            DROP FOREIGN TABLE IF EXISTS research.pubmed_suche_foerderung;

            DROP FOREIGN TABLE IF EXISTS research.pubmed_suche_id_detail;

            DROP FOREIGN TABLE IF EXISTS research.pubmed_suche_ids;

            DROP FOREIGN TABLE IF EXISTS research.pubmed_suche_mesh;

            DROP FOREIGN TABLE IF EXISTS research.sprache;

            DROP FOREIGN TABLE IF EXISTS research.studie_art;

            DROP FOREIGN TABLE IF EXISTS research.veranstaltung_art;

            DROP FOREIGN TABLE IF EXISTS research.vergabe_art;

            DROP FOREIGN TABLE IF EXISTS research.projekt_typ_neu;

            DROP FOREIGN TABLE IF EXISTS research.forschungsfelder;

            DROP FOREIGN TABLE IF EXISTS research.rechtsgrundlage;

            DROP FOREIGN TABLE IF EXISTS research.ueberwiegende_finanzierung;

            DROP FOREIGN TABLE IF EXISTS research.funktion_in_projekt;

            DROP SCHEMA research;
            """,
        )
    ]
    dependencies = [
        ("research", "0001_initial"),
    ]

    operations = [
        migrations.RunSQL(
            [forward for forward, reverse in ops],
            [reverse for forward, reverse in reversed(ops)],
        )
    ]
